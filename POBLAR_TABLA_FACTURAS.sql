USE ODS;

-- POBLAR TABLA METODOS DE PAGO
-- ++++++++++++++++++++++++++++

INSERT INTO ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_METHOD)), NOW(), NOW() 
FROM STAGE.STG_FACTURAS_FCT
WHERE LENGTH(TRIM(BILL_METHOD)) > 0;

INSERT INTO ODS_DM_METODOS_PAGO VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_METODOS_PAGO VALUES (98, 'NO APLICA', NOW(), NOW());

ANALYZE TABLE ODS_DM_METODOS_PAGO;

-- POBLAR TABLA CICLOS FACTURACION
-- ++++++++++++++++++++++++++++

INSERT INTO ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_CYCLE)), NOW(), NOW() 
FROM STAGE.STG_FACTURAS_FCT
WHERE LENGTH(TRIM(BILL_CYCLE)) > 0;

INSERT INTO ODS_DM_CICLOS_FACTURACION VALUES (99, 'DESCONOCIDO', NOW(), NOW());
INSERT INTO ODS_DM_CICLOS_FACTURACION VALUES (98, 'NO APLICA', NOW(), NOW());

ANALYZE TABLE ODS_DM_CICLOS_FACTURACION;

-- AÃ‘ADIR CLIENTES QUE NO ESTAN EN ODS_HC_CLIENTES
-- +++++++++++++++++++++++++++++++++++++++++++++++

INSERT INTO ODS_HC_CLIENTES (
ID_CLIENTE,
NOMBRE_CLIENTE,
APELLIDOS_CLIENTE,
NUMDOC_CLIENTE,
ID_SEXO,
ID_DIRECCION_CLIENTE,
TELEFONO_CLIENTE,
EMAIL,
FC_NACIMIENTO,
ID_PROFESION,
ID_COMPANYA,
FC_INSERT,
FC_MODIFICACION)
SELECT DISTINCT 
    999900000 + CUSTOMER_ID,
    'DESCONOCIDO',
    'DESCONOCIDO',
    '99-999-9999',
    99,
    999999,
    9999999999,
    'DESCONOCIDO',
    STR_TO_DATE('31/12/9999','%d/%m/%Y'),
    999,
    999,
    NOW(),
    NOW()
FROM STAGE.STG_FACTURAS_FCT FACTURAS
WHERE CUSTOMER_ID NOT IN (SELECT ID_CLIENTE FROM ODS_HC_CLIENTES)
AND 999900000 + CUSTOMER_ID NOT IN (SELECT ID_CLIENTE FROM ODS_HC_CLIENTES);

ANALYZE TABLE ODS_HC_CLIENTES;

-- POBLAR ODS_HC_FACTURAS
-- +++++++++++++++++++++++

INSERT INTO ODS_HC_FACTURAS (ID_FACTURA,
ID_CLIENTE,
FC_INICIO,
FC_FIN,
FC_ESTADO,
FC_PAGO,
ID_CICLO_FACTURACION,
ID_METODO_PAGO,
CANTIDAD,
FC_INSERT,
FC_MODIFICACION)
SELECT BILL_REF_NO,
    IFNULL(ID_CLIENTE, 999900000 + CUSTOMER_ID),
    CASE WHEN LENGTH(TRIM(START_DATE)) > 0 THEN IFNULL(str_to_date(START_DATE, "%Y-%m-%d %H:%i:%s"), str_to_date("31/12/9999", "%d/%m/%Y"))
		ELSE str_to_date("31/12/9999", "%d/%m/%Y") END FC_INICIO,
  	CASE WHEN LENGTH(TRIM(END_DATE)) > 0 THEN IFNULL(str_to_date(END_DATE, "%Y-%m-%d"), str_to_date("31/12/9999", "%d/%m/%Y")) 
		ELSE str_to_date("31/12/9999", "%d/%m/%Y") END FC_FIN,
	CASE WHEN LENGTH(TRIM(STATEMENT_DATE)) > 0 THEN IFNULL(str_to_date(STATEMENT_DATE, "%Y-%m-%d %H:%i:%s"), str_to_date("31/12/9999", "%d/%m/%Y")) 
		ELSE str_to_date("31/12/9999", "%d/%m/%Y") END FC_ESTADO,
	CASE WHEN LENGTH(TRIM(PAYMENT_DATE)) > 0 THEN IFNULL(str_to_date(PAYMENT_DATE, "%Y-%m-%d %H:%i:%s"), str_to_date("31/12/9999", "%d/%m/%Y")) 
		ELSE str_to_date("31/12/9999", "%d/%m/%Y") END FC_PAGO,
	IFNULL(ID_CICLO_FACTURACION, 99),
    IFNULL(ID_METODO_PAGO, 998),
    AMOUNT CANTIDAD,
    NOW(),
    NOW()
FROM STAGE.STG_FACTURAS_FCT FACTURAS
LEFT JOIN ODS_DM_CICLOS_FACTURACION ON UPPER(TRIM(FACTURAS.BILL_CYCLE)) = ODS_DM_CICLOS_FACTURACION.DE_CICLO_FACTURACION
LEFT JOIN ODS_DM_METODOS_PAGO on UPPER(TRIM(FACTURAS.BILL_METHOD)) = ODS_DM_METODOS_PAGO.DE_METODO_PAGO
LEFT JOIN ODS_HC_CLIENTES ON ODS_HC_CLIENTES.ID_CLIENTE = FACTURAS.CUSTOMER_ID;

ANALYZE TABLE ODS_HC_FACTURAS;